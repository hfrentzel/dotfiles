unbind-key C-b
set-option -g prefix C-Space

set -sg escape-time 10

set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'

set -g focus-events on
set -g allow-passthrough 1

# Mouse can select panes, resize panes, and select windows
set-option -g mouse on

# Easier copy mode
bind Enter copy-mode

# Vim-like key bindings for pane navigation (default uses cursor keys).
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(view|nvim|fzf)$'"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi C-left resize-pane -L 1
bind-key -T copy-mode-vi C-down resize-pane -D 1
bind-key -T copy-mode-vi C-up resize-pane -U 1
bind-key -T copy-mode-vi C-right resize-pane -R 1

# Quick tabbing through open windows
bind-key -n C-F2 previous-window
bind-key -n C-F3 next-window

# Open new/split panes with the path of the current pane.
# Intuitive window-splitting keys.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'
unbind-key %
bind-key | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
unbind-key '"'
bind-key - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Format Statusline
set-option -g status-justify centre
set-window-option -g window-status-current-style bg=red

# Set up copy mode to be more vim-like
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Y send-keys -X copy-line
bind-key -T copy-mode-vi I send-keys lBvohE # select WORD
bind-key -T copy-mode-vi H if-shell -F "#{selection_present}" "send-keys BBvohE" "send-keys -X top-line"
bind-key -T copy-mode-vi J if-shell -F "#{selection_present}" "send-keys jlBvohE" "send-keys jjjjj"
bind-key -T copy-mode-vi K if-shell -F "#{selection_present}" "send-keys klBvohE" "send-keys kkkkk"
bind-key -T copy-mode-vi L if-shell -F "#{selection_present}" "send-keys WvohE" "send-keys -X bottom-line"
bind-key -T copy-mode-vi C-n if-shell -F "#{selection_present}" \
    'send-keys -X copy-pipe-and-cancel "tmux paste"' \
    'send-keys 0v\$h; send-keys -X copy-pipe-and-cancel "tmux paste"'
bind-key -T copy-mode-vi Escape if-shell -F "#{selection_present}" "send-keys -X clear-selection" "send-keys -X cancel"

# Copy selection with right click
bind-key -T copy-mode-vi MouseDown3Pane send-keys -X copy-selection
bind-key -T copy-mode-vi 'C-c' send-keys -X copy-selection

# Stay in copy mode on drag end
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Open a url in the browser
command="sed s/##/####/g | xargs -I {} tmux run-shell -b '\"$BROWSER\" \"{}\"'"
bind-key -T copy-mode-vi O send-keys -X copy-pipe-and-cancel "$command"

# Set pane-titles for a specific named window
set-hook -g pane-focus-in "set-option -Fw pane-border-status '#{?#{==:#{window_name},$NAMED_PANE_WINDOW},top,off}'"

# Status Right
time_place="\"#(whoami)@#{=13:host}\" %H:%M %m/%d/%y"
set -g status-right-length 60
set -g status-right "#(bash $HOME/.config/tmux/plugins/kube.tmux) $time_place"

if-shell -b '[ -f ~/.config/tmux/tmux.conf.local ]' {
    source-file ~/.config/tmux/tmux.conf.local
}
